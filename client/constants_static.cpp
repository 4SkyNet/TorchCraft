/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#include <string>
#include <unordered_map>

namespace torchcraft {
namespace BW {
namespace data {

constexpr int NumKeys = 207;

std::string Keys[NumKeys] = {
    "Terran_Medic",
    "Hero_Matriarch",
    "Hero_Gantrithor",
    "Protoss_Archon",
    "Special_Overmind_Cocoon",
    "Special_Upper_Level_Door",
    "Zerg_Overlord",
    "Special_Overmind",
    "Unknown",
    "Terran_Valkyrie",
    "Hero_Norad_II",
    "Critter_Rhynadon",
    "Powerup_Mineral_Cluster_Type_1",
    "Protoss_Probe",
    "Special_Protoss_Flag_Beacon",
    "Protoss_Forge",
    "Zerg_Lurker_Egg",
    "Special_Psi_Disrupter",
    "Hero_Samir_Duran",
    "Terran_Goliath",
    "Protoss_Carrier",
    "Hero_Tom_Kazansky",
    "Terran_Ghost",
    "Hero_Tassadar_Zeratul_Archon",
    "Special_Cerebrate_Daggoth",
    "None",
    "Zerg_Infested_Terran",
    "Powerup_Psi_Emitter",
    "Special_Right_Pit_Door",
    "Terran_Control_Tower",
    "Special_Overmind_With_Shell",
    "Special_Start_Location",
    "Hero_Raszagal",
    "Hero_Unclean_One",
    "Protoss_Shield_Battery",
    "Powerup_Khalis_Crystal",
    "Powerup_Data_Disk",
    "Special_Right_Wall_Flame_Trap",
    "Resource_Vespene_Geyser",
    "Protoss_Dark_Templar",
    "Resource_Mineral_Field_Type_3",
    "Terran_Comsat_Station",
    "Special_Independant_Starport",
    "Terran_Marine",
    "Special_Terran_Flag_Beacon",
    "Zerg_Guardian",
    "Powerup_Uraj_Crystal",
    "Resource_Mineral_Field",
    "Hero_Jim_Raynor_Vulture",
    "Powerup_Terran_Gas_Tank_Type_2",
    "Terran_Vulture_Spider_Mine",
    "Critter_Ragnasaur",
    "Protoss_Cybernetics_Core",
    "Hero_Gui_Montag",
    "Special_Crashed_Norad_II",
    "Hero_Hyperion",
    "Protoss_Citadel_of_Adun",
    "Protoss_Observatory",
    "Powerup_Khaydarin_Crystal",
    "Terran_Bunker",
    "Special_Protoss_Temple",
    "Special_Zerg_Beacon",
    "Protoss_High_Templar",
    "Zerg_Cocoon",
    "Zerg_Drone",
    "Zerg_Hydralisk",
    "Spell_Dark_Swarm",
    "Terran_Civilian",
    "Protoss_Pylon",
    "Zerg_Ultralisk_Cavern",
    "Critter_Kakaru",
    "Protoss_Observer",
    "Protoss_Interceptor",
    "Zerg_Lair",
    "Special_Protoss_Beacon",
    "Zerg_Ultralisk",
    "Hero_Edmund_Duke_Siege_Mode",
    "Powerup_Terran_Gas_Tank_Type_1",
    "Special_Khaydarin_Crystal_Form",
    "Protoss_Dragoon",
    "Critter_Bengalaas",
    "Terran_Siege_Tank_Tank_Mode",
    "Protoss_Fleet_Beacon",
    "Terran_Starport",
    "Hero_Yggdrasill",
    "Terran_Supply_Depot",
    "Zerg_Greater_Spire",
    "Terran_Factory",
    "Hero_Infested_Duran",
    "Protoss_Corsair",
    "Hero_Artanis",
    "Zerg_Hive",
    "Hero_Dark_Templar",
    "Special_Mature_Chrysalis",
    "Zerg_Evolution_Chamber",
    "Terran_Wraith",
    "Zerg_Nydus_Canal",
    "Zerg_Spawning_Pool",
    "Zerg_Sunken_Colony",
    "Terran_Physics_Lab",
    "Powerup_Zerg_Gas_Sac_Type_2",
    "Terran_Missile_Turret",
    "Zerg_Queens_Nest",
    "Hero_Sarah_Kerrigan",
    "Special_Ion_Cannon",
    "Special_Cargo_Ship",
    "Protoss_Shuttle",
    "Powerup_Protoss_Gas_Orb_Type_2",
    "Hero_Hunter_Killer",
    "Terran_SCV",
    "Protoss_Templar_Archives",
    "Zerg_Hatchery",
    "Powerup_Young_Chrysalis",
    "Zerg_Zergling",
    "Terran_Firebat",
    "Special_Map_Revealer",
    "Terran_Siege_Tank_Siege_Mode",
    "Zerg_Devourer",
    "Hero_Infested_Kerrigan",
    "Special_Wall_Missile_Trap",
    "Hero_Zeratul",
    "Zerg_Defiler_Mound",
    "Hero_Torrasque",
    "Critter_Scantid",
    "Terran_Engineering_Bay",
    "Terran_Academy",
    "Special_Pit_Door",
    "Terran_Vulture",
    "Special_Cerebrate",
    "Terran_Science_Vessel",
    "Protoss_Dark_Archon",
    "Hero_Tassadar",
    "Special_Wall_Flame_Trap",
    "Protoss_Zealot",
    "Protoss_Robotics_Support_Bay",
    "Protoss_Arbiter",
    "Hero_Danimoth",
    "Special_Zerg_Flag_Beacon",
    "Hero_Arcturus_Mengsk",
    "Hero_Jim_Raynor_Marine",
    "Zerg_Queen",
    "Hero_Alexei_Stukov",
    "Zerg_Scourge",
    "Protoss_Photon_Cannon",
    "Powerup_Flag",
    "Special_Stasis_Cell_Prison",
    "Zerg_Extractor",
    "Protoss_Scout",
    "Terran_Nuclear_Silo",
    "Terran_Machine_Shop",
    "Zerg_Larva",
    "Terran_Barracks",
    "Protoss_Scarab",
    "Special_Floor_Gun_Trap",
    "Terran_Dropship",
    "Special_Mercenary_Gunship",
    "Terran_Command_Center",
    "Terran_Covert_Ops",
    "Terran_Nuclear_Missile",
    "Protoss_Arbiter_Tribunal",
    "Zerg_Spore_Colony",
    "Special_Floor_Missile_Trap",
    "Hero_Warbringer",
    "Special_Terran_Beacon",
    "Powerup_Zerg_Gas_Sac_Type_1",
    "Hero_Gerard_DuGalle",
    "Critter_Ursadon",
    "Terran_Armory",
    "Protoss_Robotics_Facility",
    "Protoss_Stargate",
    "Protoss_Nexus",
    "Hero_Magellan",
    "Hero_Mojo",
    "Special_Power_Generator",
    "Zerg_Hydralisk_Den",
    "Powerup_Mineral_Cluster_Type_2",
    "Zerg_Creep_Colony",
    "Resource_Mineral_Field_Type_2",
    "Zerg_Defiler",
    "Zerg_Lurker",
    "Zerg_Mutalisk",
    "Zerg_Spire",
    "Hero_Alan_Schezar",
    "Hero_Edmund_Duke_Tank_Mode",
    "Zerg_Egg",
    "Spell_Disruption_Web",
    "Special_Warp_Gate",
    "Protoss_Reaver",
    "Hero_Fenix_Dragoon",
    "Hero_Kukulza_Mutalisk",
    "Powerup_Protoss_Gas_Orb_Type_1",
    "Spell_Scanner_Sweep",
    "Hero_Kukulza_Guardian",
    "Terran_Science_Facility",
    "Protoss_Assimilator",
    "Special_XelNaga_Temple",
    "Special_Floor_Hatch",
    "Hero_Fenix_Zealot",
    "Protoss_Gateway",
    "Hero_Devouring_One",
    "Zerg_Broodling",
    "Terran_Refinery",
    "Special_Right_Upper_Level_Door",
    "Terran_Battlecruiser",
    "Hero_Aldaris",
    "Special_Right_Wall_Missile_Trap",
    "Zerg_Infested_Command_Center",
};

std::unordered_map<std::string, int> KeyIndex{
    {"Terran_Medic", 0},
    {"Hero_Matriarch", 1},
    {"Hero_Gantrithor", 2},
    {"Protoss_Archon", 3},
    {"Special_Overmind_Cocoon", 4},
    {"Special_Upper_Level_Door", 5},
    {"Zerg_Overlord", 6},
    {"Special_Overmind", 7},
    {"Unknown", 8},
    {"Terran_Valkyrie", 9},
    {"Hero_Norad_II", 10},
    {"Critter_Rhynadon", 11},
    {"Powerup_Mineral_Cluster_Type_1", 12},
    {"Protoss_Probe", 13},
    {"Special_Protoss_Flag_Beacon", 14},
    {"Protoss_Forge", 15},
    {"Zerg_Lurker_Egg", 16},
    {"Special_Psi_Disrupter", 17},
    {"Hero_Samir_Duran", 18},
    {"Terran_Goliath", 19},
    {"Protoss_Carrier", 20},
    {"Hero_Tom_Kazansky", 21},
    {"Terran_Ghost", 22},
    {"Hero_Tassadar_Zeratul_Archon", 23},
    {"Special_Cerebrate_Daggoth", 24},
    {"None", 25},
    {"Zerg_Infested_Terran", 26},
    {"Powerup_Psi_Emitter", 27},
    {"Special_Right_Pit_Door", 28},
    {"Terran_Control_Tower", 29},
    {"Special_Overmind_With_Shell", 30},
    {"Special_Start_Location", 31},
    {"Hero_Raszagal", 32},
    {"Hero_Unclean_One", 33},
    {"Protoss_Shield_Battery", 34},
    {"Powerup_Khalis_Crystal", 35},
    {"Powerup_Data_Disk", 36},
    {"Special_Right_Wall_Flame_Trap", 37},
    {"Resource_Vespene_Geyser", 38},
    {"Protoss_Dark_Templar", 39},
    {"Resource_Mineral_Field_Type_3", 40},
    {"Terran_Comsat_Station", 41},
    {"Special_Independant_Starport", 42},
    {"Terran_Marine", 43},
    {"Special_Terran_Flag_Beacon", 44},
    {"Zerg_Guardian", 45},
    {"Powerup_Uraj_Crystal", 46},
    {"Resource_Mineral_Field", 47},
    {"Hero_Jim_Raynor_Vulture", 48},
    {"Powerup_Terran_Gas_Tank_Type_2", 49},
    {"Terran_Vulture_Spider_Mine", 50},
    {"Critter_Ragnasaur", 51},
    {"Protoss_Cybernetics_Core", 52},
    {"Hero_Gui_Montag", 53},
    {"Special_Crashed_Norad_II", 54},
    {"Hero_Hyperion", 55},
    {"Protoss_Citadel_of_Adun", 56},
    {"Protoss_Observatory", 57},
    {"Powerup_Khaydarin_Crystal", 58},
    {"Terran_Bunker", 59},
    {"Special_Protoss_Temple", 60},
    {"Special_Zerg_Beacon", 61},
    {"Protoss_High_Templar", 62},
    {"Zerg_Cocoon", 63},
    {"Zerg_Drone", 64},
    {"Zerg_Hydralisk", 65},
    {"Spell_Dark_Swarm", 66},
    {"Terran_Civilian", 67},
    {"Protoss_Pylon", 68},
    {"Zerg_Ultralisk_Cavern", 69},
    {"Critter_Kakaru", 70},
    {"Protoss_Observer", 71},
    {"Protoss_Interceptor", 72},
    {"Zerg_Lair", 73},
    {"Special_Protoss_Beacon", 74},
    {"Zerg_Ultralisk", 75},
    {"Hero_Edmund_Duke_Siege_Mode", 76},
    {"Powerup_Terran_Gas_Tank_Type_1", 77},
    {"Special_Khaydarin_Crystal_Form", 78},
    {"Protoss_Dragoon", 79},
    {"Critter_Bengalaas", 80},
    {"Terran_Siege_Tank_Tank_Mode", 81},
    {"Protoss_Fleet_Beacon", 82},
    {"Terran_Starport", 83},
    {"Hero_Yggdrasill", 84},
    {"Terran_Supply_Depot", 85},
    {"Zerg_Greater_Spire", 86},
    {"Terran_Factory", 87},
    {"Hero_Infested_Duran", 88},
    {"Protoss_Corsair", 89},
    {"Hero_Artanis", 90},
    {"Zerg_Hive", 91},
    {"Hero_Dark_Templar", 92},
    {"Special_Mature_Chrysalis", 93},
    {"Zerg_Evolution_Chamber", 94},
    {"Terran_Wraith", 95},
    {"Zerg_Nydus_Canal", 96},
    {"Zerg_Spawning_Pool", 97},
    {"Zerg_Sunken_Colony", 98},
    {"Terran_Physics_Lab", 99},
    {"Powerup_Zerg_Gas_Sac_Type_2", 100},
    {"Terran_Missile_Turret", 101},
    {"Zerg_Queens_Nest", 102},
    {"Hero_Sarah_Kerrigan", 103},
    {"Special_Ion_Cannon", 104},
    {"Special_Cargo_Ship", 105},
    {"Protoss_Shuttle", 106},
    {"Powerup_Protoss_Gas_Orb_Type_2", 107},
    {"Hero_Hunter_Killer", 108},
    {"Terran_SCV", 109},
    {"Protoss_Templar_Archives", 110},
    {"Zerg_Hatchery", 111},
    {"Powerup_Young_Chrysalis", 112},
    {"Zerg_Zergling", 113},
    {"Terran_Firebat", 114},
    {"Special_Map_Revealer", 115},
    {"Terran_Siege_Tank_Siege_Mode", 116},
    {"Zerg_Devourer", 117},
    {"Hero_Infested_Kerrigan", 118},
    {"Special_Wall_Missile_Trap", 119},
    {"Hero_Zeratul", 120},
    {"Zerg_Defiler_Mound", 121},
    {"Hero_Torrasque", 122},
    {"Critter_Scantid", 123},
    {"Terran_Engineering_Bay", 124},
    {"Terran_Academy", 125},
    {"Special_Pit_Door", 126},
    {"Terran_Vulture", 127},
    {"Special_Cerebrate", 128},
    {"Terran_Science_Vessel", 129},
    {"Protoss_Dark_Archon", 130},
    {"Hero_Tassadar", 131},
    {"Special_Wall_Flame_Trap", 132},
    {"Protoss_Zealot", 133},
    {"Protoss_Robotics_Support_Bay", 134},
    {"Protoss_Arbiter", 135},
    {"Hero_Danimoth", 136},
    {"Special_Zerg_Flag_Beacon", 137},
    {"Hero_Arcturus_Mengsk", 138},
    {"Hero_Jim_Raynor_Marine", 139},
    {"Zerg_Queen", 140},
    {"Hero_Alexei_Stukov", 141},
    {"Zerg_Scourge", 142},
    {"Protoss_Photon_Cannon", 143},
    {"Powerup_Flag", 144},
    {"Special_Stasis_Cell_Prison", 145},
    {"Zerg_Extractor", 146},
    {"Protoss_Scout", 147},
    {"Terran_Nuclear_Silo", 148},
    {"Terran_Machine_Shop", 149},
    {"Zerg_Larva", 150},
    {"Terran_Barracks", 151},
    {"Protoss_Scarab", 152},
    {"Special_Floor_Gun_Trap", 153},
    {"Terran_Dropship", 154},
    {"Special_Mercenary_Gunship", 155},
    {"Terran_Command_Center", 156},
    {"Terran_Covert_Ops", 157},
    {"Terran_Nuclear_Missile", 158},
    {"Protoss_Arbiter_Tribunal", 159},
    {"Zerg_Spore_Colony", 160},
    {"Special_Floor_Missile_Trap", 161},
    {"Hero_Warbringer", 162},
    {"Special_Terran_Beacon", 163},
    {"Powerup_Zerg_Gas_Sac_Type_1", 164},
    {"Hero_Gerard_DuGalle", 165},
    {"Critter_Ursadon", 166},
    {"Terran_Armory", 167},
    {"Protoss_Robotics_Facility", 168},
    {"Protoss_Stargate", 169},
    {"Protoss_Nexus", 170},
    {"Hero_Magellan", 171},
    {"Hero_Mojo", 172},
    {"Special_Power_Generator", 173},
    {"Zerg_Hydralisk_Den", 174},
    {"Powerup_Mineral_Cluster_Type_2", 175},
    {"Zerg_Creep_Colony", 176},
    {"Resource_Mineral_Field_Type_2", 177},
    {"Zerg_Defiler", 178},
    {"Zerg_Lurker", 179},
    {"Zerg_Mutalisk", 180},
    {"Zerg_Spire", 181},
    {"Hero_Alan_Schezar", 182},
    {"Hero_Edmund_Duke_Tank_Mode", 183},
    {"Zerg_Egg", 184},
    {"Spell_Disruption_Web", 185},
    {"Special_Warp_Gate", 186},
    {"Protoss_Reaver", 187},
    {"Hero_Fenix_Dragoon", 188},
    {"Hero_Kukulza_Mutalisk", 189},
    {"Powerup_Protoss_Gas_Orb_Type_1", 190},
    {"Spell_Scanner_Sweep", 191},
    {"Hero_Kukulza_Guardian", 192},
    {"Terran_Science_Facility", 193},
    {"Protoss_Assimilator", 194},
    {"Special_XelNaga_Temple", 195},
    {"Special_Floor_Hatch", 196},
    {"Hero_Fenix_Zealot", 197},
    {"Protoss_Gateway", 198},
    {"Hero_Devouring_One", 199},
    {"Zerg_Broodling", 200},
    {"Terran_Refinery", 201},
    {"Special_Right_Upper_Level_Door", 202},
    {"Terran_Battlecruiser", 203},
    {"Hero_Aldaris", 204},
    {"Special_Right_Wall_Missile_Trap", 205},
    {"Zerg_Infested_Command_Center", 206},
};

bool CanAttack[NumKeys] = {
    false, false, true,  true,  false, false, false, false, true,  true,  true,
    false, false, true,  false, false, false, false, true,  true,  true,  true,
    true,  true,  false, false, true,  false, false, false, false, false, true,
    false, false, false, false, true,  false, true,  false, false, false, true,
    false, true,  false, false, true,  false, true,  false, false, true,  false,
    true,  false, false, false, false, false, false, false, false, true,  true,
    false, false, false, false, false, false, true,  false, false, true,  true,
    false, false, true,  false, true,  false, false, false, false, false, false,
    true,  true,  true,  false, true,  false, false, true,  false, false, true,
    false, false, true,  false, true,  false, false, false, false, true,  true,
    false, false, false, true,  true,  false, true,  true,  true,  true,  true,
    false, true,  false, false, false, false, true,  false, false, false, true,
    true,  true,  false, true,  true,  false, true,  true,  false, true,  true,
    true,  false, false, false, true,  false, false, false, false, true,  true,
    false, false, false, false, true,  false, true,  true,  true,  false, false,
    true,  false, false, false, false, false, false, true,  false, false, false,
    false, false, false, true,  true,  false, true,  true,  false, false, false,
    true,  true,  true,  false, false, true,  false, false, false, false, true,
    false, true,  true,  false, false, true,  true,  true,  false,
};

int DimensionRight[NumKeys] = {
    8,  23, 31, 15, 47, 44, 24,  79, 0,  24, 37, 15, 15, 11, 47, 36, 15,  69,
    7,  15, 31, 18, 7,  15, 32,  0,  8,  15, 41, 28, 79, 48, 17, 13, 32,  15,
    15, 15, 63, 11, 31, 31, 31,  8,  47, 21, 15, 31, 15, 15, 7,  15, 40,  11,
    47, 37, 40, 44, 15, 32, 111, 47, 11, 15, 11, 10, 79, 8,  16, 32, 15,  15,
    7,  49, 47, 18, 15, 15, 63,  16, 15, 15, 47, 48, 24, 38, 28, 56, 7,   17,
    17, 49, 11, 31, 32, 18, 31,  40, 23, 28, 15, 16, 32, 7,  47, 16, 19,  15,
    10, 11, 32, 49, 15, 7,  11,  13, 15, 21, 7,  15, 11, 48, 18, 15, 48,  44,
    28, 15, 32, 32, 15, 11, 15,  11, 32, 21, 21, 47, 37, 8,  23, 7,  11,  20,
    15, 63, 63, 17, 31, 31, 7,   56, 2,  31, 24, 16, 58, 28, 7,  44, 23,  31,
    15, 47, 15, 37, 15, 47, 40,  48, 56, 32, 17, 63, 40, 15, 23, 31, 13,  16,
    21, 28, 15, 15, 15, 59, 47,  15, 16, 21, 15, 13, 21, 48, 48, 79, 127, 11,
    48, 7,  9,  56, 25, 37, 11,  15, 58,
};

int Height[NumKeys] = {
    20, 48, 64, 32, 64, 38, 50, 73, 1,  37, 59, 32, 32,  23, 64, 45, 32,  86,
    22, 32, 64, 30, 22, 32, 64, 1,  20, 32, 38, 47, 73,  65, 32, 25, 33,  32,
    32, 32, 64, 26, 32, 42, 64, 20, 64, 44, 32, 32, 32,  32, 15, 32, 49,  22,
    64, 59, 49, 45, 32, 41, 96, 64, 24, 32, 23, 23, 160, 20, 33, 64, 32,  32,
    16, 65, 64, 32, 32, 32, 96, 32, 32, 32, 57, 79, 50,  49, 57, 81, 22,  32,
    32, 65, 26, 64, 53, 30, 64, 47, 48, 47, 32, 49, 57,  22, 64, 32, 32,  32,
    23, 23, 49, 65, 32, 16, 22, 31, 32, 44, 22, 32, 26,  37, 32, 32, 61,  57,
    38, 32, 64, 50, 32, 24, 32, 19, 53, 44, 44, 64, 59,  20, 48, 22, 24,  33,
    32, 96, 64, 32, 42, 49, 16, 73, 5,  64, 37, 32, 83,  47, 29, 57, 48,  64,
    32, 64, 32, 59, 32, 55, 37, 73, 79, 50, 32, 72, 57,  32, 48, 32, 25,  32,
    44, 57, 32, 32, 32, 80, 64, 32, 32, 44, 32, 31, 44,  77, 57, 98, 128, 19,
    73, 16, 19, 64, 38, 59, 24, 32, 83,
};

bool IsMineralField[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool CanProduce[NumKeys] = {
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, true,  false, false, false, true,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, true,  false, false, false, false, false, true,  false, false,
    false, false, false, true,  true,  true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, true,
};

bool IsRefinery[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, true,  false, false, false, false, false,
};

bool IsResourceDepot[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool RegeneratesHP[NumKeys] = {
    false, true,  false, false, true,  false, true,  true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, true,  false, false, false, true,  false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  true,
    false, false, false, true,  false, false, false, true,  false, true,  false,
    false, false, false, false, false, false, false, true,  false, true,  false,
    true,  false, false, true,  false, true,  true,  false, true,  true,  true,
    false, false, false, true,  false, false, false, false, false, true,  false,
    false, true,  false, true,  false, false, false, true,  true,  false, false,
    true,  true,  false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, true,  false, true,
    false, false, false, true,  false, false, false, true,  false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    true,  false, true,  true,  true,  true,  false, false, false, false, false,
    false, false, true,  false, false, true,  false, false, false, false, false,
    false, true,  true,  false, false, false, false, false, true,
};

bool IsCloakable[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, true,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool IsTwoUnitsInOneEgg[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false,
};

bool IsSpellcaster[NumKeys] = {
    true,  true,  false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, true,  false, false, true,
    true,  false, false, false, false, false, false, false, false, false, true,
    true,  true,  false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  true,  false, false, false, false, false, true,  false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, true,  true,  true,
    false, false, false, true,  true,  false, true,  false, true,  true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, true,  false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  true,  false, false,
};

int SupplyRequired[NumKeys] = {
    2, 0, 0, 8, 0, 0, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 0, 0, 4,  12, 0, 2,
    0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0,  2,  0, 4,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 2,  0,  0, 0,
    0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0,  4,  0, 0,
    2, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0,  0,  1, 2,
    0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 8, 0, 0, 4, 0,  8,  0, 0,
    0, 0, 4, 0, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0,  16, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4,  0,  0, 0,
    0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0,  0, 0,
};

std::string AirWeapon[NumKeys] = {
    "None",
    "None",
    "None",
    "Psionic_Shockwave",
    "None",
    "None",
    "None",
    "None",
    "Unknown",
    "Halo_Rockets",
    "ATA_Laser_Battery_Hero",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "C_10_Canister_Rifle_Samir_Duran",
    "Hellfire_Missile_Pack",
    "None",
    "Gemini_Missiles_Tom_Kazansky",
    "C_10_Canister_Rifle",
    "Psionic_Shockwave_TZ_Archon",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Neutron_Flare",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Gauss_Rifle",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "ATA_Laser_Battery_Hyperion",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Needle_Spines",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Pulse_Cannon",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Phase_Disruptor",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "C_10_Canister_Rifle_Infested_Duran",
    "Neutron_Flare",
    "Anti_Matter_Missiles_Artanis",
    "None",
    "None",
    "None",
    "None",
    "Gemini_Missiles",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Longbolt_Missile",
    "None",
    "C_10_Canister_Rifle_Sarah_Kerrigan",
    "None",
    "None",
    "None",
    "None",
    "Needle_Spines_Hunter_Killer",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Corrosive_Acid",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Phase_Disruptor_Cannon",
    "Phase_Disruptor_Cannon_Danimoth",
    "None",
    "ATA_Laser_Battery_Hero",
    "Gauss_Rifle_Jim_Raynor",
    "None",
    "C_10_Canister_Rifle_Alexei_Stukov",
    "Suicide_Scourge",
    "STA_Photon_Cannon",
    "None",
    "None",
    "None",
    "Anti_Matter_Missiles",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Seeker_Spores",
    "None",
    "None",
    "None",
    "None",
    "ATA_Laser_Battery_Hero",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Anti_Matter_Missiles_Mojo",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Glave_Wurm",
    "None",
    "Hellfire_Missile_Pack_Alan_Schezar",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Phase_Disruptor_Fenix",
    "Glave_Wurm_Kukulza",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "ATA_Laser_Battery",
    "None",
    "None",
    "None",
};

int BuildScore[NumKeys] = {
    125,  0,   0,   700, 0,   0,   100, 0,   0,    400, 0,   0,   0,   50,  0,
    100,  0,   0,   0,   200, 950, 0,   175, 0,    0,   0,   200, 0,   0,   100,
    0,    0,   0,   0,   50,  0,   0,   0,   10,   325, 10,  75,  10,  50,  0,
    550,  0,   10,  0,   0,   0,   0,   100, 0,    0,   0,   200, 175, 0,   50,
    0,    0,   350, 0,   50,  125, 0,   0,   50,   275, 0,   225, 30,  100, 0,
    650,  0,   0,   0,   250, 0,   350, 350, 200,  0,   50,  200, 200, 0,   350,
    0,    100, 0,   0,   40,  400, 75,  75,  40,   75,  0,   50,  175, 0,   0,
    0,    200, 0,   0,   50,  250, 300, 0,   25,   100, 0,   0,   550, 0,   0,
    0,    150, 0,   0,   65,  100, 0,   75,  0,    625, 650, 0,   0,   100, 125,
    1025, 0,   0,   0,   0,   400, 0,   100, 100,  0,   0,   25,  650, 75,  75,
    0,    75,  0,   0,   300, 0,   400, 75,  800,  450, 25,  0,   0,   0,   0,
    0,    0,   100, 300, 300, 400, 0,   0,   0,    100, 0,   40,  10,  225, 250,
    300,  250, 0,   0,   0,   0,   0,   400, 0,    0,   0,   0,   0,   275, 50,
    0,    0,   0,   75,  0,   0,   50,  0,   1200, 0,   0,   300,
};

int MaxAirHits[NumKeys] = {
    0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1,
    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
    0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
    0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
    0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
    1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
};

bool IsPowerup[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, true,  true,  false, false, false, false, false, false, false,
    false, false, true,  false, false, true,  false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, true,  false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool IsBeacon[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

int MineralPrice[NumKeys] = {
    50,  200, 700, 0,    1000, 1,   100, 1,   0,   250, 800, 1,   1,   50,
    100, 150, 1,   1000, 200,  100, 350, 400, 25,  0,   0,   0,   100, 1,
    1,   50,  1,   0,    150,  50,  100, 1,   1,   1,   1,   125, 1,   50,
    1,   50,  50,  50,   1,    1,   150, 1,   1,   1,   200, 100, 800, 800,
    150, 50,  1,   100,  250,  250, 50,  1,   50,  75,  250, 0,   100, 150,
    1,   25,  25,  150,  100,  200, 300, 1,   250, 125, 1,   150, 300, 150,
    200, 100, 100, 200,  200,  150, 600, 200, 150, 0,   75,  150, 150, 200,
    50,  50,  1,   75,   150,  50,  200, 100, 200, 1,   150, 50,  150, 300,
    1,   50,  50,  0,    150,  150, 200, 1,   100, 100, 400, 1,   125, 150,
    1,   75,  0,   100,  0,    100, 1,   100, 150, 100, 50,  250, 800, 50,
    100, 200, 25,  150,  1,    150, 50,  275, 100, 50,  1,   150, 15,  1,
    100, 100, 400, 50,   200,  200, 50,  1,   400, 50,  1,   800, 1,   100,
    200, 150, 400, 50,   600,  200, 100, 1,   75,  1,   50,  50,  100, 200,
    200, 300, 1,   250,  600,  200, 300, 200, 1,   0,   100, 100, 100, 1500,
    1,   200, 150, 100,  1,    100, 1,   400, 100, 1,   1,
};

bool IsInvincible[NumKeys] = {
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, true,  true,  false, false, false, false,
    false, false, true,  true,  false, true,  false, true,  false, false, false,
    true,  false, true,  true,  false, false, false, false, false, false, false,
    false, false, false, true,  false, false, true,  false, false, false, false,
    true,  false, false, false, false, false, false, false, true,  false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, true,  false,
    false, false, false, false, true,  false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, true,  false, false, false, false,
};

std::string RequiredTech[NumKeys] = {
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "Lurker_Aspect", "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "Lurker_Aspect", "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None", "None",          "None", "None",
    "None", "None", "None",          "None",
};

int DimensionDown[NumKeys] = {
    10, 23, 31, 15, 31, 20, 24, 40, 0,  20, 29, 15, 15, 11, 31, 20, 15, 47, 11,
    15, 31, 14, 11, 15, 31, 0,  10, 15, 20, 22, 40, 32, 15, 12, 16, 15, 15, 15,
    31, 19, 15, 25, 31, 10, 31, 21, 15, 15, 15, 15, 7,  15, 24, 14, 31, 29, 24,
    28, 15, 16, 47, 31, 13, 15, 11, 12, 79, 10, 20, 31, 15, 15, 7,  32, 31, 15,
    15, 15, 47, 16, 15, 15, 24, 38, 24, 26, 24, 40, 11, 15, 15, 32, 19, 31, 20,
    14, 31, 18, 23, 22, 15, 16, 28, 11, 31, 16, 15, 15, 12, 11, 24, 32, 15, 11,
    14, 17, 15, 21, 11, 15, 19, 4,  15, 15, 28, 24, 20, 15, 31, 16, 15, 13, 15,
    13, 20, 21, 21, 31, 29, 10, 23, 11, 11, 16, 15, 47, 31, 15, 25, 24, 7,  32,
    2,  31, 20, 16, 41, 22, 14, 28, 23, 31, 15, 31, 15, 29, 15, 22, 20, 32, 39,
    16, 15, 43, 24, 15, 23, 15, 12, 16, 21, 24, 15, 15, 15, 39, 31, 15, 16, 21,
    15, 17, 21, 38, 24, 63, 63, 13, 40, 11, 9,  31, 20, 29, 13, 15, 41,
};

bool CanBuildAddon[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

int DimensionLeft[NumKeys] = {
    8,  24, 32, 16, 48, 25, 25,  80, 0,  24, 37, 16, 16, 11, 48, 36, 16,  80,
    7,  16, 32, 19, 7,  16, 40,  0,  8,  16, 28, 47, 80, 48, 18, 13, 32,  16,
    16, 16, 64, 12, 32, 37, 32,  8,  48, 22, 16, 32, 16, 16, 7,  16, 40,  11,
    48, 37, 24, 44, 16, 32, 112, 48, 12, 16, 11, 10, 80, 8,  16, 40, 16,  16,
    8,  49, 48, 19, 16, 16, 64,  15, 16, 16, 40, 48, 25, 38, 28, 56, 7,   18,
    18, 49, 12, 32, 44, 19, 32,  36, 24, 47, 16, 16, 38, 7,  48, 15, 20,  16,
    10, 11, 32, 49, 16, 8,  11,  13, 16, 22, 7,  16, 12, 48, 19, 16, 48,  40,
    41, 16, 40, 32, 16, 12, 16,  11, 32, 22, 22, 48, 37, 8,  24, 7,  12,  20,
    16, 64, 64, 18, 37, 39, 8,   48, 2,  32, 24, 15, 58, 47, 7,  44, 24,  32,
    16, 48, 16, 37, 16, 48, 36,  48, 56, 32, 18, 56, 40, 16, 24, 32, 13,  15,
    22, 28, 16, 16, 16, 60, 48,  16, 15, 22, 16, 13, 22, 48, 48, 80, 128, 11,
    48, 8,  9,  56, 44, 37, 12,  16, 58,
};

bool ProducesLarva[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

int Armor[NumKeys] = {
    1,  3, 4, 0, 1, 0, 0, 1, 0, 2, 4, 0, 0,  0, 0, 1, 10, 1, 2, 1, 4, 4, 0,
    3,  1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 1, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0, 2,
    0,  0, 3, 0, 0, 0, 1, 3, 1, 4, 1, 1, 0,  1, 1, 0, 0,  0, 0, 0, 0, 0, 0,
    1,  0, 0, 0, 1, 0, 1, 3, 0, 1, 1, 0, 1,  1, 1, 4, 1,  1, 1, 3, 1, 3, 1,
    0,  1, 1, 0, 1, 1, 2, 1, 0, 0, 1, 3, 1,  1, 1, 0, 2,  0, 1, 1, 0, 0, 1,
    0,  1, 2, 2, 0, 0, 1, 4, 0, 1, 1, 0, 0,  1, 1, 1, 2,  0, 1, 1, 1, 3, 0,
    4,  3, 0, 3, 0, 0, 0, 1, 1, 0, 1, 1, 10, 1, 0, 0, 1,  1, 1, 1, 0, 1, 0,
    0,  3, 0, 0, 4, 0, 1, 1, 1, 1, 4, 3, 1,  1, 0, 0, 0,  1, 1, 0, 1, 3, 3,
    10, 0, 1, 0, 3, 3, 0, 0, 4, 1, 1, 1, 0,  2, 1, 3, 0,  1, 0, 3, 2, 0, 1,
};

bool IsMechanical[NumKeys] = {
    false, false, true,  false, false, false, false, false, false, true,  true,
    false, false, true,  false, true,  false, true,  false, true,  true,  true,
    false, false, false, false, false, false, false, true,  false, false, true,
    false, true,  false, false, true,  false, false, false, true,  true,  false,
    false, false, false, false, true,  false, false, false, true,  false, true,
    true,  true,  true,  false, true,  false, false, false, false, false, false,
    false, false, true,  false, false, true,  true,  false, false, false, true,
    false, false, true,  false, true,  true,  true,  false, true,  false, true,
    false, true,  true,  false, false, false, false, true,  false, false, false,
    true,  false, true,  false, false, true,  false, true,  false, false, true,
    true,  false, false, false, false, false, true,  false, false, true,  false,
    false, false, false, true,  true,  false, true,  false, true,  false, false,
    true,  false, true,  true,  true,  false, true,  false, false, false, false,
    true,  false, true,  false, true,  true,  true,  false, true,  true,  true,
    true,  false, true,  true,  false, true,  false, true,  true,  false, false,
    true,  false, true,  true,  true,  true,  true,  true,  true,  false, false,
    false, false, false, false, false, false, true,  true,  false, false, true,
    true,  true,  false, false, false, false, true,  true,  false, false, false,
    true,  false, false, true,  false, true,  false, true,  false,
};

bool IsBuilding[NumKeys] = {
    false, false, false, false, true,  false, false, true,  false, false, false,
    false, false, false, true,  true,  false, true,  false, false, false, false,
    false, false, true,  false, false, false, false, true,  true,  true,  false,
    false, true,  false, false, false, true,  false, true,  true,  true,  false,
    true,  false, false, true,  false, false, false, false, true,  false, true,
    false, true,  true,  false, true,  true,  true,  false, false, false, false,
    false, false, true,  true,  false, false, false, true,  true,  false, false,
    false, true,  false, false, false, true,  true,  false, true,  true,  true,
    false, false, false, true,  false, true,  true,  false, true,  true,  true,
    true,  false, true,  true,  false, true,  false, false, false, false, false,
    true,  true,  false, false, false, false, false, false, false, false, false,
    true,  false, false, true,  true,  false, false, true,  false, false, false,
    false, false, true,  false, false, true,  false, false, false, false, false,
    true,  false, true,  true,  false, true,  true,  false, true,  false, false,
    false, false, true,  true,  false, true,  true,  false, false, true,  false,
    false, false, true,  true,  true,  true,  false, false, true,  true,  false,
    true,  true,  false, false, false, true,  false, false, false, false, true,
    false, false, false, false, false, false, true,  true,  true,  false, false,
    true,  false, false, true,  false, false, false, false, true,
};

int SupplyProvided[NumKeys] = {
    0, 0, 0, 0, 0, 0, 16, 0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 16,
    0, 0, 0, 0, 2, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 60, 16, 0, 0,  0, 0, 0, 2,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  2, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 20, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 18, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0,
};

int SightRange[NumKeys] = {
    288, 320, 288, 256, 320, 32,  288, 256, 0,   256, 352, 224, 160, 256, 256,
    320, 128, 320, 320, 256, 352, 224, 288, 256, 256, 0,   160, 160, 32,  256,
    256, 32,  288, 320, 320, 160, 160, 96,  288, 224, 288, 320, 288, 224, 256,
    352, 160, 288, 256, 160, 96,  224, 320, 224, 320, 352, 320, 320, 160, 320,
    320, 256, 224, 128, 224, 192, 256, 224, 256, 256, 224, 288, 192, 320, 256,
    224, 320, 160, 320, 256, 224, 320, 320, 320, 352, 256, 256, 256, 352, 288,
    320, 352, 224, 256, 256, 224, 256, 256, 320, 256, 160, 352, 256, 352, 256,
    256, 256, 160, 256, 224, 320, 288, 160, 160, 224, 320, 320, 320, 288, 192,
    224, 256, 224, 224, 256, 256, 32,  256, 256, 320, 320, 224, 96,  224, 320,
    288, 288, 256, 256, 224, 320, 352, 160, 352, 160, 256, 224, 256, 256, 256,
    128, 256, 160, 192, 256, 224, 320, 256, 96,  320, 320, 192, 320, 256, 160,
    352, 224, 256, 320, 320, 352, 320, 320, 256, 256, 160, 320, 288, 320, 256,
    224, 256, 256, 320, 128, 256, 256, 320, 256, 224, 160, 320, 352, 320, 320,
    320, 224, 224, 320, 160, 160, 256, 32,  352, 224, 192, 320,
};

int GasPrice[NumKeys] = {
    25,  300,  600, 0,   500, 1,   0,   1,   0,   125, 600, 1,   1,   0,   100,
    0,   1,    400, 75,  50,  250, 200, 75,  0,   0,   0,   50,  1,   1,   50,
    1,   0,    100, 200, 0,   1,   1,   1,   1,   100, 1,   50,  1,   0,   50,
    100, 1,    1,   0,   1,   0,   1,   0,   50,  600, 600, 100, 100, 1,   0,
    0,   0,    150, 1,   0,   25,  200, 0,   0,   200, 1,   75,  0,   100, 100,
    200, 200,  1,   0,   50,  1,   100, 200, 100, 0,   0,   150, 100, 75,  100,
    300, 150,  150, 0,   0,   100, 0,   0,   0,   50,  1,   0,   100, 150, 0,
    100, 0,    1,   50,  0,   200, 0,   1,   0,   25,  0,   100, 50,  300, 1,
    300, 100,  400, 1,   0,   0,   1,   0,   0,   225, 0,   300, 1,   0,   100,
    350, 1000, 0,   600, 0,   100, 75,  75,  0,   1,   0,   0,   125, 100, 50,
    1,   0,    0,   1,   100, 100, 0,   50,  200, 150, 0,   1,   200, 50,  1,
    600, 1,    50,  200, 150, 0,   600, 300, 50,  50,  1,   0,   1,   150, 100,
    100, 150,  100, 200, 1,   250, 200, 100, 100, 200, 1,   0,   200, 150, 0,
    500, 1,    0,   0,   0,   1,   0,   1,   300, 300, 1,   1,
};

int MaxHitPoints[NumKeys] = {
    60,     300,    800,    10,     2500,   100000, 200,    2500,   0,      200,
    700,    60,     800,    20,     100000, 550,    200,    2000,   200,    125,
    300,    500,    45,     100,    1500,   0,      60,     800,    100000, 500,
    5000,   800,    100,    250,    200,    10000,  800,    50,     100000, 80,
    100000, 500,    800,    40,     100000, 150,    10000,  100000, 300,    800,
    20,     60,     500,    160,    700,    850,    450,    250,    800,    350,
    1500,   100000, 40,     200,    40,     80,     800,    40,     300,    600,
    60,     40,     40,     1800,   100000, 400,    400,    800,    100000, 100,
    60,     150,    500,    1300,   1000,   500,    1000,   1250,   300,    100,
    250,    2500,   40,     250,    750,    120,    250,    750,    300,    600,
    800,    200,    850,    250,    2000,   125,    80,     800,    160,    60,
    500,    1250,   800,    35,     50,     1,      150,    250,    400,    50,
    60,     850,    800,    60,     850,    600,    100000, 80,     1500,   200,
    25,     80,     50,     100,    450,    200,    600,    100000, 1000,   200,
    120,    250,    25,     100,    100000, 2000,   750,    150,    600,    750,
    25,     1000,   20,     50,     150,    125,    1500,   750,    100,    500,
    400,    50,     200,    100000, 800,    700,    60,     750,    500,    600,
    750,    800,    400,    800,    850,    800,    400,    100000, 80,     125,
    120,    600,    300,    400,    200,    800,    700,    100,    240,    300,
    800,    0,      400,    850,    450,    5000,   100000, 240,    500,    120,
    30,     750,    100000, 500,    80,     50,     1500,
};

int Width[NumKeys] = {
    17, 48,  64,  32,  96,  70, 50,  160, 1,  49,  75,  32, 32,  23,  96,  73,
    32, 150, 15,  32,  64,  38, 15,  32,  73, 1,   17,  32, 70,  76,  160, 97,
    36, 27,  65,  32,  32,  32, 128, 24,  64, 69,  64,  17, 96,  44,  32,  64,
    32, 32,  15,  32,  81,  23, 96,  75,  65, 89,  32,  65, 224, 96,  24,  32,
    23, 21,  160, 17,  33,  73, 32,  32,  16, 99,  96,  38, 32,  32,  128, 32,
    32, 32,  88,  97,  50,  77, 57,  113, 15, 36,  36,  99, 24,  64,  77,  38,
    64, 77,  48,  76,  32,  33, 71,  15,  96, 32,  40,  32, 21,  23,  65,  99,
    32, 16,  23,  27,  32,  44, 15,  32,  24, 97,  38,  32, 97,  85,  70,  32,
    73, 65,  32,  24,  32,  23, 65,  44,  44, 96,  75,  17, 48,  15,  24,  41,
    32, 128, 128, 36,  69,  71, 16,  105, 5,  64,  49,  32, 117, 76,  15,  89,
    48, 64,  32,  96,  32,  75, 32,  96,  77, 97,  113, 65, 36,  120, 81,  32,
    48, 64,  27,  32,  44,  57, 32,  32,  32, 120, 96,  32, 32,  44,  32,  27,
    44, 97,  97,  160, 256, 23, 97,  16,  19, 113, 70,  75, 24,  32,  117,
};

int TileWidth[NumKeys] = {
    1, 2, 2, 1, 3, 3, 2, 5, 0, 2, 2, 1, 1, 1, 3, 3, 1, 5, 1, 1, 2, 1, 1,
    1, 3, 0, 1, 1, 3, 2, 5, 4, 1, 1, 3, 1, 1, 1, 4, 1, 2, 2, 2, 1, 3, 2,
    1, 2, 1, 1, 1, 1, 3, 1, 3, 2, 3, 3, 1, 3, 7, 3, 1, 1, 1, 1, 5, 1, 2,
    3, 1, 1, 1, 4, 3, 2, 1, 1, 4, 1, 1, 1, 3, 4, 2, 3, 2, 4, 1, 1, 2, 4,
    1, 2, 3, 1, 2, 3, 2, 2, 1, 2, 3, 1, 3, 1, 2, 1, 1, 1, 3, 4, 1, 1, 1,
    1, 1, 2, 1, 1, 1, 4, 2, 1, 4, 3, 3, 1, 3, 2, 1, 1, 1, 1, 3, 2, 2, 3,
    2, 1, 2, 1, 1, 2, 1, 4, 4, 2, 2, 2, 1, 4, 1, 2, 2, 1, 4, 2, 1, 3, 2,
    2, 1, 3, 1, 2, 1, 3, 3, 4, 4, 2, 2, 4, 3, 1, 2, 2, 1, 1, 2, 2, 1, 1,
    1, 4, 3, 1, 1, 2, 1, 1, 2, 4, 4, 5, 8, 1, 4, 1, 1, 4, 3, 2, 1, 1, 4,
};

bool IsHero[NumKeys] = {
    false, true,  true,  false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, true,  false, false, true,
    false, true,  false, false, false, false, false, false, false, false, true,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, true,  false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, true,  false, false, false,
    true,  false, true,  false, true,  false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, true,  false, true,
    false, true,  false, false, false, false, false, false, false, false, true,
    false, false, false, false, true,  false, true,  true,  false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    true,  false, false, false, false, false, true,  true,  false, false, false,
    false, false, false, false, false, false, true,  true,  false, false, false,
    false, true,  true,  false, false, true,  false, false, false, false, true,
    false, true,  false, false, false, false, true,  false, false,
};

int SeekRange[NumKeys] = {
    288, 256, 256, 96,  0,   0,   0,   0,   0,  0,   0,  0,   0,   0,   0,  0,
    0,   0,   0,   160, 256, 0,   0,   96,  0,  0,   96, 0,   0,   0,   0,  0,
    288, 0,   0,   0,   0,   64,  0,   96,  0,  0,   0,  0,   0,   0,   0,  0,
    0,   0,   96,  0,   0,   96,  0,   0,   0,  0,   0,  0,   0,   0,   96, 0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,  0,   0,  96,  0,   0,   0,  0,
    0,   256, 0,   0,   0,   0,   0,   0,   0,  288, 0,  0,   96,  0,   0,  0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,  256, 0,  0,   0,   32,  0,  0,
    0,   96,  96,  0,   0,   224, 96,  160, 96, 0,   96, 0,   0,   0,   0,  0,
    0,   0,   224, 96,  64,  96,  0,   0,   0,  0,   0,  0,   256, 0,   96, 0,
    0,   0,   0,   0,   0,   0,   0,   0,   96, 160, 0,  128, 0,   0,   0,  0,
    0,   160, 256, 0,   0,   0,   0,   0,   0,  0,   0,  0,   0,   0,   0,  0,
    0,   0,   0,   192, 96,  0,   160, 256, 0,  0,   0,  256, 0,   96,  0,  0,
    0,   0,   0,   0,   0,   96,  0,   96,  96, 0,   0,  0,   96,  160, 0,
};

int BuildTime[NumKeys] = {
    450,  1500, 4200, 300,  2400, 1,    600,  1,    0,    750,  4800, 1,
    1,    300,  1,    600,  1,    4800, 1500, 600,  2100, 1800, 750,  600,
    0,    0,    600,  1,    1,    600,  1,    0,    750,  1500, 450,  1,
    1,    1,    1,    750,  1,    600,  1,    360,  1,    600,  1,    1,
    900,  1,    1,    1,    900,  720,  4800, 2400, 900,  450,  1,    450,
    1,    1,    750,  1,    300,  420,  2400, 1,    450,  1200, 1,    600,
    300,  1500, 1,    900,  1500, 1,    1,    750,  1,    750,  900,  1050,
    1200, 600,  1800, 1200, 1500, 600,  2400, 1800, 750,  0,    600,  900,
    600,  1200, 300,  600,  1,    450,  900,  1500, 900,  600,  900,  1,
    780,  300,  900,  1800, 1,    420,  360,  1,    750,  600,  1500, 1,
    1500, 900,  1800, 1,    900,  1200, 1,    450,  0,    1200, 300,  1500,
    1,    600,  450,  2400, 4800, 1,    4800, 1,    750,  1500, 450,  750,
    1,    1,    600,  1200, 1200, 600,  1,    1200, 105,  1,    750,  600,
    1800, 600,  1500, 900,  300,  1,    1800, 1,    1,    4800, 1,    1200,
    1200, 1050, 1800, 2400, 2400, 2400, 600,  1,    300,  1,    750,  600,
    600,  1800, 1200, 1500, 1,    2400, 2400, 1050, 1500, 1200, 1,    1,
    1200, 900,  600,  4800, 1,    1200, 900,  840,  1,    600,  1,    2000,
    1500, 1,    1800,
};

bool IsCritter[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool RequiresPsi[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, true,  true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, true,  true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false,
};

bool IsSpecialBuilding[NumKeys] = {
    false, false, false, false, true,  false, false, true,  false, false, false,
    false, false, false, true,  false, false, true,  false, false, false, false,
    false, false, true,  false, false, false, false, false, true,  true,  false,
    false, false, false, false, false, true,  false, true,  false, true,  false,
    true,  false, false, true,  false, false, false, false, false, false, true,
    false, false, false, false, false, true,  true,  false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, true,  false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false,
};

std::string GroundWeapon[NumKeys] = {
    "None",
    "None",
    "None",
    "Psionic_Shockwave",
    "None",
    "None",
    "None",
    "None",
    "Unknown",
    "None",
    "ATS_Laser_Battery_Hero",
    "None",
    "None",
    "Particle_Beam",
    "None",
    "None",
    "None",
    "None",
    "C_10_Canister_Rifle_Samir_Duran",
    "Twin_Autocannons",
    "None",
    "Burst_Lasers_Tom_Kazansky",
    "C_10_Canister_Rifle",
    "Psionic_Shockwave_TZ_Archon",
    "None",
    "None",
    "Suicide_Infested_Terran",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Flame_Thrower_Wall_Trap",
    "None",
    "Warp_Blades",
    "None",
    "None",
    "Independant_Laser_Battery",
    "Gauss_Rifle",
    "None",
    "Acid_Spore",
    "None",
    "None",
    "Fragmentation_Grenade_Jim_Raynor",
    "None",
    "Spider_Mines",
    "None",
    "None",
    "Flame_Thrower_Gui_Montag",
    "None",
    "ATS_Laser_Battery_Hyperion",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Spines",
    "Needle_Spines",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Pulse_Cannon",
    "None",
    "None",
    "Kaiser_Blades",
    "Arclite_Shock_Cannon_Edmund_Duke",
    "None",
    "None",
    "Phase_Disruptor",
    "None",
    "Arclite_Cannon",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "C_10_Canister_Rifle_Infested_Duran",
    "None",
    "Dual_Photon_Blasters_Artanis",
    "None",
    "Warp_Blades_Hero",
    "None",
    "None",
    "Burst_Lasers",
    "None",
    "None",
    "Subterranean_Tentacle",
    "None",
    "None",
    "None",
    "None",
    "C_10_Canister_Rifle_Sarah_Kerrigan",
    "None",
    "None",
    "None",
    "None",
    "Needle_Spines_Hunter_Killer",
    "Fusion_Cutter",
    "None",
    "None",
    "None",
    "Claws",
    "Flame_Thrower",
    "None",
    "Arclite_Shock_Cannon",
    "None",
    "Claws_Infested_Kerrigan",
    "Hellfire_Missile_Pack_Wall_Trap",
    "Warp_Blades_Zeratul",
    "None",
    "Kaiser_Blades_Torrasque",
    "None",
    "None",
    "None",
    "None",
    "Fragmentation_Grenade",
    "None",
    "None",
    "None",
    "Psi_Assault",
    "Flame_Thrower_Wall_Trap",
    "Psi_Blades",
    "None",
    "Phase_Disruptor_Cannon",
    "Phase_Disruptor_Cannon_Danimoth",
    "None",
    "ATS_Laser_Battery_Hero",
    "Gauss_Rifle_Jim_Raynor",
    "None",
    "C_10_Canister_Rifle_Alexei_Stukov",
    "None",
    "STS_Photon_Cannon",
    "None",
    "None",
    "None",
    "Dual_Photon_Blasters",
    "None",
    "None",
    "None",
    "None",
    "Scarab",
    "Twin_Autocannons_Floor_Trap",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Hellfire_Missile_Pack_Floor_Trap",
    "None",
    "None",
    "None",
    "ATS_Laser_Battery_Hero",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Dual_Photon_Blasters_Mojo",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Subterranean_Spines",
    "Glave_Wurm",
    "None",
    "Twin_Autocannons_Alan_Schezar",
    "Arclite_Cannon_Edmund_Duke",
    "None",
    "None",
    "None",
    "None",
    "Phase_Disruptor_Fenix",
    "Glave_Wurm_Kukulza",
    "None",
    "None",
    "Acid_Spore_Kukulza",
    "None",
    "None",
    "None",
    "None",
    "Psi_Blades_Fenix",
    "None",
    "Claws_Devouring_One",
    "Toxic_Spores",
    "None",
    "None",
    "ATS_Laser_Battery",
    "Psi_Assault",
    "Hellfire_Missile_Pack_Wall_Trap",
    "None",
};

bool IsFlyer[NumKeys] = {
    false, true,  true,  false, false, false, true,  false, false, true,  true,
    false, false, false, false, false, false, false, false, false, true,  true,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, true,  true,  true,  false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, true,  true,  false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, true,  false, true,  false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, true,  true,  false, true,  false, true,  false, true,
    false, false, false, false, true,  false, false, false, false, false, false,
    true,  false, false, false, true,  false, false, false, false, false, false,
    true,  false, false, false, false, false, true,  true,  false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, true,  false, true,  true,  false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false,
};

std::string Size[NumKeys] = {
    "Small",       "Medium",      "Large",       "Large",       "Large",
    "Independent", "Large",       "Large",       "Unknown",     "Large",
    "Large",       "Small",       "Independent", "Small",       "Independent",
    "Large",       "Medium",      "Large",       "Small",       "Large",
    "Large",       "Large",       "Small",       "Large",       "Large",
    "None",        "Small",       "Independent", "Independent", "Large",
    "Large",       "Independent", "Medium",      "Medium",      "Large",
    "Independent", "Independent", "Large",       "Independent", "Small",
    "Independent", "Large",       "Independent", "Small",       "Independent",
    "Large",       "Independent", "Independent", "Medium",      "Independent",
    "Small",       "Small",       "Large",       "Small",       "Large",
    "Large",       "Large",       "Large",       "Independent", "Large",
    "Large",       "Independent", "Small",       "Large",       "Small",
    "Medium",      "Independent", "Small",       "Large",       "Large",
    "Small",       "Small",       "Small",       "Large",       "Independent",
    "Large",       "Large",       "Independent", "Large",       "Large",
    "Small",       "Large",       "Large",       "Large",       "Large",
    "Large",       "Large",       "Large",       "Small",       "Medium",
    "Large",       "Large",       "Small",       "Large",       "Large",
    "Large",       "Large",       "Large",       "Large",       "Large",
    "Independent", "Large",       "Large",       "Small",       "Large",
    "Medium",      "Large",       "Independent", "Medium",      "Small",
    "Large",       "Large",       "Independent", "Small",       "Small",
    "Independent", "Large",       "Large",       "Small",       "Large",
    "Small",       "Large",       "Large",       "Small",       "Large",
    "Large",       "Independent", "Medium",      "Large",       "Large",
    "Large",       "Small",       "Large",       "Small",       "Large",
    "Large",       "Large",       "Independent", "Large",       "Small",
    "Medium",      "Small",       "Small",       "Large",       "Independent",
    "Large",       "Large",       "Large",       "Large",       "Large",
    "Small",       "Large",       "Small",       "Large",       "Large",
    "Medium",      "Large",       "Large",       "Independent", "Large",
    "Large",       "Large",       "Large",       "Independent", "Independent",
    "Large",       "Small",       "Large",       "Large",       "Large",
    "Large",       "Large",       "Large",       "Large",       "Large",
    "Independent", "Large",       "Independent", "Medium",      "Medium",
    "Small",       "Large",       "Large",       "Large",       "Medium",
    "Independent", "Large",       "Large",       "Large",       "Small",
    "Independent", "Independent", "Large",       "Large",       "Large",
    "Large",       "Independent", "Small",       "Large",       "Small",
    "Small",       "Large",       "Independent", "Large",       "Small",
    "Large",       "Large",
};

bool IsNeutral[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, true,  false, false, false,
    false, false, false, true,  false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, true,  false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

int MaxShields[NumKeys] = {
    0,  0, 500, 350, 0,   0,   0,   0,   0,   0,   0,   0,  0,   20, 0,   550,
    0,  0, 0,   0,   150, 0,   0,   800, 0,   0,   0,   0,  0,   0,  0,   0,
    60, 0, 200, 0,   0,   0,   0,   40,  0,   0,   0,   0,  0,   0,  0,   0,
    0,  0, 0,   0,   500, 0,   0,   0,   450, 250, 0,   0,  0,   0,  40,  0,
    0,  0, 0,   0,   300, 0,   0,   20,  40,  0,   0,   0,  0,   0,  0,   80,
    0,  0, 500, 0,   0,   0,   0,   0,   0,   80,  250, 0,  80,  0,  0,   0,
    0,  0, 0,   0,   0,   0,   0,   0,   0,   0,   60,  0,  0,   0,  500, 0,
    0,  0, 0,   0,   0,   0,   0,   0,   400, 0,   0,   0,  0,   0,  0,   0,
    0,  0, 200, 300, 0,   60,  450, 150, 500, 0,   0,   0,  0,   0,  0,   100,
    0,  0, 0,   100, 0,   0,   0,   0,   10,  0,   0,   0,  0,   0,  0,   500,
    0,  0, 400, 0,   0,   0,   0,   0,   500, 600, 750, 0,  400, 0,  0,   0,
    0,  0, 0,   0,   0,   0,   0,   0,   0,   0,   0,   80, 240, 0,  0,   0,
    0,  0, 450, 0,   0,   240, 500, 0,   0,   0,   0,   0,  300, 0,  0,
};

bool HasPermanentCloak[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

double TopSpeed[NumKeys] = {
    4,     6.67, 3.33,  4.92, 0,    0,    0.83, 0,    0,    6.6,  2.5,  4,
    0,     4.92, 0,     0,    0,    0,    4,    4.57, 3.33, 6.67, 4,    4.92,
    0,     0,    5.82,  0,    0,    0,    0,    0,    6.67, 4,    0,    0,
    0,     0,    0,     4.92, 0,    0,    0,    4,    0,    2.5,  0,    0,
    6.4,   0,    16,    4,    0,    4,    0,    2.5,  0,    0,    0,    0,
    0,     0,    3.2,   0,    4.92, 3.66, 0,    4,    0,    0,    5,    3.33,
    13.33, 0,    0,     5.12, 0,    0,    0,    5,    4,    4,    0,    1,
    0.83,  0,    0,     1,    4,    6.67, 5,    0,    4.92, 0,    0,    6.67,
    0,     0,    0,     0,    0,    0,    0,    4,    0,    0,    4.43, 0,
    3.66,  4.92, 0,     0,    0,    5.49, 4,    0,    0,    5,    4,    0,
    4.92,  0,    5.12,  4,    1,    0,    0,    6.4,  0,    5,    4.92, 3.2,
    0,     4,    0,     5,    5,    0,    2.5,  4,    6.67, 4,    6.67, 0,
    0,     0,    0,     5,    0,    0,    0,    1,    16,   0,    5.47, 0,
    1,     0,    33.33, 0,    0,    0,    1.78, 0,    0,    2.5,  4,    0,
    0,     0,    0,     5,    5,    0,    0,    0,    0,    0,    4,    5.82,
    6.67,  0,    4.57,  4,    0,    0,    0,    1.78, 5,    6.67, 0,    0,
    2.5,   1,    0,     0,    0,    4,    0,    5.49, 6,    0,    0,    2.5,
    3.2,   0,    1,
};

int TileHeight[NumKeys] = {
    1, 2, 2, 1, 2, 2, 2, 3, 0, 2, 2, 1, 1, 1, 2, 2, 1, 3, 1, 1, 2, 1, 1,
    1, 2, 0, 1, 1, 2, 2, 3, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2,
    1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 3, 2, 1, 1, 1, 1, 5, 1, 2,
    2, 1, 1, 1, 3, 2, 2, 1, 1, 3, 1, 1, 1, 2, 3, 2, 2, 2, 3, 1, 1, 1, 3,
    1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
    1, 1, 2, 1, 1, 1, 2, 2, 1, 3, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2,
    2, 1, 2, 1, 1, 2, 1, 3, 2, 1, 2, 2, 1, 3, 1, 2, 2, 1, 3, 2, 1, 2, 2,
    2, 1, 2, 1, 2, 1, 2, 2, 3, 3, 2, 1, 3, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1,
    1, 3, 2, 1, 1, 2, 1, 1, 2, 3, 2, 4, 4, 1, 3, 1, 1, 2, 2, 2, 1, 1, 3,
};

bool IsRobotic[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

int DimensionUp[NumKeys] = {
    9,  24, 32, 16, 32, 17, 25, 32, 0,  16, 29, 16, 16, 11, 32, 24, 16, 38, 10,
    16, 32, 15, 10, 16, 32, 0,  9,  16, 17, 24, 32, 32, 16, 12, 16, 16, 16, 16,
    32, 6,  16, 16, 32, 9,  32, 22, 16, 16, 16, 16, 7,  16, 24, 7,  32, 29, 24,
    16, 16, 24, 48, 32, 10, 16, 11, 10, 80, 9,  12, 32, 16, 16, 8,  32, 32, 16,
    16, 16, 48, 15, 16, 16, 32, 40, 25, 22, 32, 40, 10, 16, 16, 32, 6,  32, 32,
    15, 32, 28, 24, 24, 16, 32, 28, 10, 32, 15, 16, 16, 10, 11, 24, 32, 16, 4,
    7,  13, 16, 22, 10, 16, 6,  32, 16, 16, 32, 32, 17, 16, 32, 33, 16, 10, 16,
    5,  32, 22, 22, 32, 29, 9,  24, 10, 12, 16, 16, 48, 32, 16, 16, 24, 8,  40,
    2,  32, 16, 15, 41, 24, 14, 28, 24, 32, 16, 32, 16, 29, 16, 32, 16, 40, 39,
    33, 16, 28, 32, 16, 24, 16, 12, 15, 22, 32, 16, 16, 16, 40, 32, 16, 15, 22,
    16, 13, 22, 38, 32, 34, 64, 5,  32, 4,  9,  32, 17, 29, 10, 16, 41,
};

int DestroyScore[NumKeys] = {
    250,  1600, 3800, 1400, 4000, 10,   200,   10000, 0,    800,  4800, 10,
    0,    100,  0,    300,  500,  3600, 700,   400,   1900, 1600, 350,  2800,
    2500, 0,    400,  0,    10,   300,  10000, 0,     1300, 900,  150,  0,
    0,    100,  10,   650,  10,   225,  10,    100,   0,    1100, 0,    10,
    300,  0,    25,   10,   300,  400,  5000,  4800,  600,  525,  0,    150,
    5000, 0,    700,  1100, 100,  350,  0,     10,    150,  825,  10,   450,
    60,   1200, 0,    1300, 1400, 0,    2500,  500,   10,   700,  1050, 600,
    400,  150,  1350, 600,  700,  700,  2400,  1500,  400,  5000, 120,  800,
    225,  225,  240,  225,  0,    150,  525,   700,   5000, 0,    400,  0,
    500,  100,  750,  900,  0,    50,   200,   0,     700,  1100, 4000, 100,
    800,  450,  2600, 10,   195,  300,  10,    150,   2500, 1250, 1300, 1400,
    100,  200,  375,  2050, 4100, 0,    4800,  200,   800,  700,  200,  300,
    0,    5000, 75,   1300, 225,  225,  10,    225,   0,    100,  600,  0,
    1200, 225,  0,    1350, 195,  100,  1600,  0,     0,    4800, 10,   300,
    900,  900,  1200, 2500, 2600, 600,  300,   0,     120,  10,   450,  500,
    600,  750,  800,  1400, 25,   0,    2000,  800,   1000, 1200, 0,    0,
    2200, 825,  150,  5000, 10,   400,  225,   100,   25,   150,  10,   2400,
    1400, 100,  900,
};

int SpaceProvided[NumKeys] = {
    0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

std::string TileSize[NumKeys] = {
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
    "BWAPI::TilePosition", "BWAPI::TilePosition", "BWAPI::TilePosition",
};

int HaltDistance[NumKeys] = {
    1,     21745, 13474, 5120,  0,     0,     840,   0,     0,       21901,
    7585,  1,     0,     12227, 0,     0,     0,     0,     1,       1,
    13474, 21745, 1,     5120,  0,     0,     1,     0,     0,       0,
    0,     0,     17067, 1,     0,     0,     0,     0,     0,       13474,
    0,     0,     0,     1,     0,     7585,  0,     0,     14569,   0,
    1,     1,     0,     1,     0,     7585,  0,     0,     0,       2763,
    0,     0,     13474, 0,     12227, 1,     0,     1,     0,       0,
    51200, 13474, 13640, 0,     0,     1,     1,     0,     0,       1,
    1,     1,     0,     2763,  840,   0,     0,     2763,  1,       17067,
    17067, 0,     13474, 0,     0,     21745, 0,     0,     0,       0,
    0,     0,     0,     1,     0,     0,     37756, 0,     1,       12227,
    0,     0,     0,     1,     1,     0,     1,     17067, 1,       0,
    13474, 0,     1,     1,     2763,  0,     0,     14569, 0,       5120,
    5120,  13474, 0,     1,     0,     24824, 24824, 0,     7585,    1,
    21745, 1,     13616, 0,     0,     0,     0,     17067, 0,       0,
    1,     2763,  1,     0,     37756, 0,     2763,  0,     1103213, 0,
    0,     0,     1,     0,     0,     7585,  1,     0,     0,       0,
    0,     5120,  17067, 0,     0,     0,     0,     0,     1,       1,
    21745, 0,     1,     1,     0,     0,     0,     1,     1,       21745,
    0,     0,     7585,  2763,  0,     0,     0,     1,     0,       1,
    1,     2763,  0,     7585,  13474, 0,     2763,
};

bool IsAddon[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  true,  false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool CanMove[NumKeys] = {
    true,  true,  true,  true,  false, false, true,  false, false, true,  true,
    true,  false, true,  false, false, false, false, true,  true,  true,  true,
    true,  true,  false, false, true,  false, false, false, false, false, true,
    true,  false, false, false, false, false, true,  false, false, false, true,
    false, true,  false, false, true,  false, true,  true,  false, true,  false,
    true,  false, false, false, false, false, false, true,  false, true,  true,
    false, true,  false, false, true,  true,  true,  false, false, true,  false,
    false, false, true,  true,  true,  false, false, true,  false, false, false,
    true,  true,  true,  false, true,  false, false, true,  false, false, false,
    false, false, false, false, true,  false, false, true,  false, true,  true,
    false, false, false, true,  true,  false, false, true,  true,  false, true,
    false, true,  true,  false, false, false, true,  false, true,  true,  true,
    false, true,  false, true,  true,  false, true,  true,  true,  true,  true,
    false, false, false, false, true,  false, false, true,  false, true,  false,
    true,  false, false, false, true,  false, false, false, true,  false, false,
    true,  true,  false, false, false, false, true,  true,  false, false, false,
    false, false, true,  true,  true,  false, true,  true,  false, false, false,
    true,  true,  true,  false, true,  true,  false, false, false, false, true,
    false, true,  true,  false, false, true,  true,  false, false,
};

bool IsFlyingBuilding[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, true,  false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, true,
};

int MaxEnergy[NumKeys] = {
    200, 250, 0,   0,   0,   0,   0, 0,   0,   0, 250, 0,   0,   0, 0, 0,   0,
    0,   250, 0,   0,   250, 200, 0, 0,   0,   0, 0,   0,   0,   0, 0, 250, 250,
    200, 0,   0,   0,   0,   0,   0, 200, 0,   0, 0,   0,   0,   0, 0, 0,   0,
    0,   0,   0,   0,   250, 0,   0, 0,   0,   0, 0,   200, 0,   0, 0, 0,   0,
    0,   0,   0,   0,   0,   0,   0, 0,   0,   0, 0,   0,   0,   0, 0, 0,   0,
    0,   0,   0,   250, 200, 0,   0, 0,   0,   0, 200, 0,   0,   0, 0, 0,   0,
    0,   250, 0,   0,   0,   0,   0, 0,   0,   0, 0,   0,   0,   0, 0, 0,   250,
    0,   0,   0,   0,   0,   0,   0, 0,   0,   0, 200, 200, 250, 0, 0, 0,   200,
    250, 0,   250, 0,   200, 250, 0, 0,   0,   0, 0,   0,   0,   0, 0, 0,   0,
    0,   0,   0,   0,   0,   0,   0, 0,   0,   0, 0,   0,   250, 0, 0, 0,   0,
    0,   250, 0,   0,   0,   0,   0, 0,   200, 0, 0,   0,   0,   0, 0, 0,   0,
    0,   0,   0,   0,   0,   0,   0, 0,   0,   0, 0,   0,   0,   0, 0, 0,   200,
    250, 0,   0,
};

bool IsDetector[NumKeys] = {
    false, false, false, false, true,  false, true,  true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, true,  false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, true,  true,  false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, true,  true,  false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false,
};

bool IsOrganic[NumKeys] = {
    true,  true,  false, false, true,  false, true,  true,  false, false, false,
    true,  false, false, false, false, true,  false, true,  false, false, false,
    true,  false, true,  false, true,  false, false, false, true,  false, false,
    true,  false, false, false, false, false, true,  false, false, false, true,
    false, true,  false, false, false, false, false, true,  false, true,  false,
    false, false, false, false, false, false, false, true,  true,  true,  true,
    false, true,  false, true,  true,  false, false, true,  false, true,  false,
    false, false, false, true,  false, false, false, true,  false, true,  false,
    true,  false, false, true,  true,  true,  true,  false, true,  true,  true,
    false, false, false, true,  true,  false, false, false, false, true,  true,
    false, true,  false, true,  true,  false, false, true,  true,  false, true,
    true,  true,  true,  false, false, false, false, true,  false, false, true,
    false, true,  false, false, false, false, false, true,  true,  true,  true,
    false, false, false, true,  false, false, false, true,  false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, true,  false, false, false, false, false, false, false, true,  false,
    true,  false, true,  true,  true,  true,  false, false, true,  false, false,
    false, false, true,  false, false, true,  false, false, false, false, true,
    false, true,  true,  false, false, false, true,  false, true,
};

int SpaceRequired[NumKeys] = {
    1,   255, 255, 4,   255, 255, 255, 255, 0,   255, 255, 255, 255, 1,   255,
    255, 255, 255, 1,   2,   255, 255, 1,   4,   255, 0,   1,   255, 255, 255,
    255, 255, 255, 2,   255, 255, 255, 255, 255, 2,   255, 255, 255, 1,   255,
    255, 255, 255, 2,   255, 255, 255, 255, 1,   255, 255, 255, 255, 255, 255,
    255, 255, 2,   255, 1,   2,   255, 1,   255, 255, 255, 255, 255, 255, 255,
    4,   255, 255, 255, 4,   255, 4,   255, 255, 255, 255, 255, 255, 1,   255,
    255, 255, 2,   255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1,   255,
    255, 255, 255, 2,   1,   255, 255, 255, 1,   1,   255, 255, 255, 1,   255,
    2,   255, 4,   255, 255, 255, 255, 2,   255, 255, 4,   2,   255, 2,   255,
    255, 255, 255, 255, 1,   255, 1,   255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 4,   255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 2,   4,
    255, 255, 2,   4,   255, 255, 255, 4,   4,   255, 255, 255, 255, 255, 255,
    255, 255, 2,   255, 1,   1,   255, 255, 255, 2,   255, 255,
};

bool IsFlagBeacon[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool IsWorker[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool IsBurrowable[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, true,  false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  true,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false,
};

std::string CloakingTech[NumKeys] = {
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Personnel_Cloaking",
    "None",
    "None",
    "Cloaking_Field",
    "Personnel_Cloaking",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Personnel_Cloaking",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Cloaking_Field",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Personnel_Cloaking",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Personnel_Cloaking",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "Personnel_Cloaking",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
    "None",
};

bool IsResourceContainer[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, true,  false, true,  false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, true,  false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, true,  false, false, false,
    false, false, false, true,  false, false, false, false, false,
};

int Acceleration[NumKeys] = {
    1,   67, 27,  160, 0,  0,  27, 0,   0,   65, 27, 1,  0,  67, 0,   0,
    0,   0,  1,   1,   27, 67, 1,  160, 0,   0,  1,  0,  0,  0,  0,   0,
    67,  1,  0,   0,   0,  0,  0,  27,  0,   0,  0,  1,  0,  27, 0,   0,
    100, 0,  1,   1,   0,  1,  0,  27,  0,   0,  0,  33, 0,  0,  27,  0,
    67,  1,  0,   1,   0,  0,  16, 27,  427, 0,  0,  1,  1,  0,  0,   1,
    1,   1,  0,   33,  27, 0,  0,  33,  1,   67, 48, 0,  27, 0,  0,   67,
    0,   0,  0,   0,   0,  0,  0,  1,   0,   0,  17, 0,  1,  67, 0,   0,
    0,   1,  1,   0,   1,  48, 1,  0,   27,  0,  1,  1,  33, 0,  0,   100,
    0,   50, 160, 27,  0,  1,  0,  33,  33,  0,  27, 1,  67, 1,  107, 0,
    0,   0,  0,   48,  0,  0,  1,  33,  1,   0,  17, 0,  33, 0,  33,  0,
    0,   0,  1,   0,   0,  27, 1,  0,   0,   0,  0,  50, 48, 0,  0,   0,
    0,   0,  1,   1,   67, 0,  1,  1,   0,   0,  0,  1,  1,  67, 0,   0,
    27,  33, 0,   0,   0,  1,  0,  1,   1,   33, 0,  27, 27, 0,  33,
};

bool IsSpell[NumKeys] = {
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, true,  false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

bool RequiresCreep[NumKeys] = {
    false, false, false, false, true,  false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, true,  false, false, false, false, false, true,  false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    false, false, false, false, false, true,  true,  false, true,  true,  true,
    false, false, false, true,  false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    true,  false, false, false, false, false, false, true,  false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, true,  false, false, false, false,
    false, false, false, false, false, false, false, false, false, true,  false,
    true,  false, false, false, false, true,  false, false, false, false, false,
    false, false, false, false, false, false, false, false, false, false, false,
    false, false, false, false, false, false, false, false, false,
};

std::string ArmorUpgrade[NumKeys] = {
    "Terran_Infantry_Armor",
    "Zerg_Flyer_Carapace",
    "Protoss_Air_Armor",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Unknown",
    "Terran_Ship_Plating",
    "Terran_Ship_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Upgrade_60",
    "Terran_Infantry_Armor",
    "Terran_Vehicle_Plating",
    "Protoss_Air_Armor",
    "Terran_Ship_Plating",
    "Terran_Infantry_Armor",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "None",
    "Zerg_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Air_Armor",
    "Zerg_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Vehicle_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Zerg_Carapace",
    "Zerg_Carapace",
    "Zerg_Carapace",
    "Upgrade_60",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Air_Armor",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Terran_Vehicle_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Terran_Vehicle_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Protoss_Air_Armor",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Zerg_Carapace",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Terran_Infantry_Armor",
    "Upgrade_60",
    "Terran_Vehicle_Plating",
    "Zerg_Flyer_Carapace",
    "Zerg_Carapace",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Zerg_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Vehicle_Plating",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Protoss_Ground_Armor",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Protoss_Air_Armor",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Terran_Infantry_Armor",
    "Zerg_Flyer_Carapace",
    "Terran_Infantry_Armor",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Protoss_Air_Armor",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Carapace",
    "Zerg_Carapace",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Terran_Vehicle_Plating",
    "Terran_Vehicle_Plating",
    "Zerg_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Protoss_Ground_Armor",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Zerg_Flyer_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Upgrade_60",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Zerg_Carapace",
    "Zerg_Carapace",
    "Upgrade_60",
    "Upgrade_60",
    "Terran_Ship_Plating",
    "Protoss_Ground_Armor",
    "Upgrade_60",
    "Upgrade_60",
};

int MaxGroundHits[NumKeys] = {
    0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1,
    1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1,
    0, 0, 1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
    0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
    1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 3,
    0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 2, 0, 1, 1, 0,
    1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
    1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1,
    0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 1, 1, 0,
};

int TurnRadius[NumKeys] = {
    40, 40, 20, 40, 0,  0,  20, 0,  0,  30,  20, 27, 0,  40, 0,   0,  0,  0,
    40, 17, 20, 40, 40, 40, 0,  0,  40, 0,   0,  0,  0,  0,  30,  27, 0,  0,
    0,  0,  0,  40, 0,  0,  0,  40, 0,  20,  0,  0,  40, 0,  127, 27, 0,  40,
    0,  20, 0,  0,  0,  27, 0,  0,  40, 0,   40, 27, 0,  40, 0,   0,  14, 20,
    40, 0,  0,  40, 40, 0,  0,  40, 27, 13,  0,  27, 20, 0,  0,   27, 40, 30,
    30, 0,  40, 0,  0,  40, 0,  0,  0,  0,   0,  40, 0,  40, 0,   0,  20, 0,
    27, 40, 0,  0,  0,  27, 40, 0,  40, 30,  40, 0,  40, 0,  40,  27, 27, 0,
    0,  40, 0,  40, 40, 40, 0,  40, 0,  40,  40, 0,  20, 40, 40,  40, 40, 0,
    0,  0,  0,  30, 0,  0,  20, 27, 27, 127, 20, 0,  27, 0,  127, 0,  0,  20,
    20, 0,  0,  20, 27, 0,  0,  0,  0,  40,  30, 0,  0,  0,  0,   0,  27, 40,
    40, 0,  17, 13, 0,  0,  0,  20, 40, 40,  0,  0,  20, 27, 0,   0,  0,  40,
    0,  27, 27, 27, 0,  20, 40, 0,  27,
};

std::string GetRace[NumKeys] = {
    "Terran",  "Zerg",    "Protoss", "Protoss", "Zerg",    "None",    "Zerg",
    "Zerg",    "Unknown", "Terran",  "Terran",  "None",    "None",    "Protoss",
    "Protoss", "Protoss", "Zerg",    "Terran",  "Terran",  "Terran",  "Protoss",
    "Terran",  "Terran",  "Protoss", "Zerg",    "None",    "Zerg",    "None",
    "None",    "Terran",  "Zerg",    "None",    "Protoss", "Zerg",    "Protoss",
    "None",    "None",    "None",    "None",    "Protoss", "None",    "Terran",
    "None",    "Terran",  "Terran",  "Zerg",    "None",    "None",    "Terran",
    "None",    "Terran",  "None",    "Protoss", "Terran",  "Terran",  "Terran",
    "Protoss", "Protoss", "None",    "Terran",  "Protoss", "Zerg",    "Protoss",
    "Zerg",    "Zerg",    "Zerg",    "None",    "Terran",  "Protoss", "Zerg",
    "None",    "Protoss", "Protoss", "Zerg",    "Protoss", "Zerg",    "Terran",
    "None",    "Protoss", "Protoss", "None",    "Terran",  "Protoss", "Terran",
    "Zerg",    "Terran",  "Zerg",    "Terran",  "Zerg",    "Protoss", "Protoss",
    "Zerg",    "Protoss", "Zerg",    "Zerg",    "Terran",  "Zerg",    "Zerg",
    "Zerg",    "Terran",  "None",    "Terran",  "Zerg",    "Terran",  "Terran",
    "Zerg",    "Protoss", "None",    "Zerg",    "Terran",  "Protoss", "Zerg",
    "None",    "Zerg",    "Terran",  "None",    "Terran",  "Zerg",    "Zerg",
    "None",    "Protoss", "Zerg",    "Zerg",    "None",    "Terran",  "Terran",
    "None",    "Terran",  "Zerg",    "Terran",  "Protoss", "Protoss", "None",
    "Protoss", "Protoss", "Protoss", "Protoss", "Zerg",    "Terran",  "Terran",
    "Zerg",    "Terran",  "Zerg",    "Protoss", "None",    "Protoss", "Zerg",
    "Protoss", "Terran",  "Terran",  "Zerg",    "Terran",  "Protoss", "None",
    "Terran",  "Zerg",    "Terran",  "Terran",  "Terran",  "Protoss", "Zerg",
    "None",    "Protoss", "Terran",  "None",    "Terran",  "None",    "Terran",
    "Protoss", "Protoss", "Protoss", "Terran",  "Protoss", "Terran",  "Zerg",
    "None",    "Zerg",    "None",    "Zerg",    "Zerg",    "Zerg",    "Zerg",
    "Terran",  "Terran",  "Zerg",    "None",    "Protoss", "Protoss", "Protoss",
    "Zerg",    "None",    "Terran",  "Zerg",    "Terran",  "Protoss", "Protoss",
    "None",    "Protoss", "Protoss", "Zerg",    "Zerg",    "Terran",  "None",
    "Terran",  "Protoss", "None",    "Zerg",
};

} // namespace data
} // namespace BW
} // namespace clent
